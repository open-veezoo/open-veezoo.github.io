(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{109:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return d}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=r.a.createContext({}),b=function(e){var t=r.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=b(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=b(n),m=a,d=u["".concat(i,".").concat(m)]||u[m]||p[m]||o;return n?r.a.createElement(d,s(s({ref:t},c),{},{components:n})):r.a.createElement(d,s({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},98:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return b}));var a=n(2),r=n(6),o=(n(0),n(109)),i={id:"class",title:"class",sidebar_label:"What is a class?"},s={unversionedId:"reference/kb-layer/class/class",id:"reference/kb-layer/class/class",isDocsHomePage:!1,title:"class",description:"Definition",source:"@site/docs/reference/kb-layer/class/class.md",slug:"/reference/kb-layer/class/class",permalink:"/docs/reference/kb-layer/class/class",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/reference/kb-layer/class/class.md",version:"current",sidebar_label:"What is a class?",sidebar:"docs",previous:{title:"join",permalink:"/docs/reference/kb-layer/general/join"},next:{title:"sql / name_sql / synonym_sql",permalink:"/docs/reference/kb-layer/class/sql"}},l=[{value:"Definition",id:"definition",children:[]},{value:"Usage",id:"usage",children:[]}],c={rightToc:l};function b(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"definition"},"Definition"),Object(o.b)("p",null,"If you come from a software background, you may be familiar with the idea of a class as defined in object-oriented programming. In some sense, we are making your data more object-oriented. "),Object(o.b)("p",null,"So, a class can be defined as a category of things. The best way to understand it is to go over some examples."),Object(o.b)("p",null,"A class could be something like:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"Customer")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"Country")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"Order")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"Movie"))),Object(o.b)("p",null,"A class can be defined by a SQL table, column or SQL query. For instance, for a table ",Object(o.b)("inlineCode",{parentName:"p"},"customer(id, name, status)"),", Veezoo will generate 2 classes (",Object(o.b)("inlineCode",{parentName:"p"},"kb.Customer")," and ",Object(o.b)("inlineCode",{parentName:"p"},"kb.Status"),") and a relationship ",Object(o.b)("inlineCode",{parentName:"p"},"with_Status")," between them."),Object(o.b)("h2",{id:"usage"},"Usage"),Object(o.b)("p",null,"Let's see how classes are defined in VKL."),Object(o.b)("p",null,"File: ",Object(o.b)("em",{parentName:"p"},"hitchhiker/knowledge-base/classes/Customer/class.vkl")),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'import: [\n    db.postgres.movie_db.public.ORDERS\n]\n\nkb {\n    class Customer {\n        name.en: "Customer"     \n        synonym.en: "Client"\n        extends: onto.Customer\n        \n        sql: "${ORDERS.customer_id}"\n        name_sql.en:\n          "${ORDERS.customer_firstname} || \' \' || ${ORDERS.customer_lastname}"\n    }\n}\n')),Object(o.b)("p",null,"Let's break it down in parts:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"../general/name"}),"name"),": The name of the class in the specified language (",Object(o.b)("inlineCode",{parentName:"li"},"en")," for English). This is the primary way to refer to this concept in a question and what gets displayed to the user in an answer."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"../general/synonym"}),"synonym"),': Synonyms specify alternative ways to refer to this concept in a question. In our example, we can say "how many customers", but also "how many clients" and it will mean the same.'),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"extends"}),"extends"),": By using this optional attribute, you can point your class to a pre-defined ontology class and inherit labels and other functionalities from it. Studio already does this automatically to the best of its knowledge.")),Object(o.b)("p",null,"The glue between the ",Object(o.b)("inlineCode",{parentName:"p"},"knowledge-base")," layer and the ",Object(o.b)("inlineCode",{parentName:"p"},"database")," layer is in the ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"sql"}),"sql"),". Check its reference page to learn more about it."),Object(o.b)("p",null,"There are more properties you can add to a ",Object(o.b)("inlineCode",{parentName:"p"},"class")," in VKL. Check the next pages to learn more about them."))}b.isMDXComponent=!0}}]);