(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{108:function(e,n,t){"use strict";t.d(n,"a",(function(){return b})),t.d(n,"b",(function(){return m}));var r=t(0),a=t.n(r);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=a.a.createContext({}),s=function(e){var n=a.a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},b=function(e){var n=s(e.components);return a.a.createElement(p.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},u=a.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),b=s(t),u=r,m=b["".concat(o,".").concat(u)]||b[u]||d[u]||i;return t?a.a.createElement(m,l(l({ref:n},p),{},{components:t})):a.a.createElement(m,l({ref:n},p))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=u;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=t[p];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},75:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return o})),t.d(n,"rightToc",(function(){return l})),t.d(n,"default",(function(){return p}));var r=t(2),a=(t(0),t(108));const i={id:"name",title:"name",sidebar_label:"name",slug:"/reference/kb-layer/general/name"},o={unversionedId:"reference/kb-layer/general/name",id:"reference/kb-layer/general/name",isDocsHomePage:!1,title:"name",description:"Definition",source:"@site/docs/reference/kb-layer/general/name.md",slug:"/reference/kb-layer/general/name",permalink:"/docs/reference/kb-layer/general/name",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/reference/kb-layer/general/name.md",version:"current",sidebar_label:"name",sidebar:"docs",previous:{title:"Transform Your Data and Simplify The Knowledge Graph",permalink:"/docs/recipes/transform-data"},next:{title:"display_name",permalink:"/docs/reference/kb-layer/general/display_name"}},l=[{value:"Definition",id:"definition",children:[]},{value:"Usage",id:"usage",children:[]}],c={rightToc:l};function p({components:e,...n}){return Object(a.b)("wrapper",Object(r.a)({},c,n,{components:e,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"definition"},"Definition"),Object(a.b)("p",null,"Every concept in the Knowledge Base layer has either a ",Object(a.b)("inlineCode",{parentName:"p"},"name")," or a ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"display_name"}),"display_name"),"."),Object(a.b)("p",null,"The way you should think about ",Object(a.b)("inlineCode",{parentName:"p"},"name")," is as a combination of ",Object(a.b)("inlineCode",{parentName:"p"},"display_name")," and ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"synonym"}),"synonym"),"."),Object(a.b)("p",null,"In other words, like ",Object(a.b)("inlineCode",{parentName:"p"},"display_name"),", it is the name that gets displayed to the user in titles, filters, autocomplete and the Knowledge Graph view.\nAnd like ",Object(a.b)("inlineCode",{parentName:"p"},"synonym"),", the ",Object(a.b)("inlineCode",{parentName:"p"},"name")," defines how users can refer to this concept in questions."),Object(a.b)("h2",{id:"usage"},"Usage"),Object(a.b)("p",null,"The property ",Object(a.b)("inlineCode",{parentName:"p"},"name")," can be used in ",Object(a.b)("inlineCode",{parentName:"p"},"class"),", ",Object(a.b)("inlineCode",{parentName:"p"},"relationship"),", ",Object(a.b)("inlineCode",{parentName:"p"},"entity")," and all ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/reference/kb-layer/attribute"}),"attributes"),". It is a single String value per language (no Array is allowed) and is defined with a language tag (",Object(a.b)("inlineCode",{parentName:"p"},"en")," for English, ",Object(a.b)("inlineCode",{parentName:"p"},"it")," for Italian, ",Object(a.b)("inlineCode",{parentName:"p"},"de")," for German, ",Object(a.b)("inlineCode",{parentName:"p"},"fr")," for French or ",Object(a.b)("inlineCode",{parentName:"p"},"all")," for all languages)."),Object(a.b)("p",null,"Example:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-json"}),'kb {\n    class Customer {\n        name.en: "Customer" \n        name.de: "Kunde"\n        \n        ...\n    }\n}\n')),Object(a.b)("p",null,"In the case of Entities, the ",Object(a.b)("inlineCode",{parentName:"p"},"name")," attribute is derived dynamically from the ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"../class/sql"}),"name_sql")," specified in the class."))}p.isMDXComponent=!0}}]);