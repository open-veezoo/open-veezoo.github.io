(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{110:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var o=n(0),r=n.n(o);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=r.a.createContext({}),u=function(e){var t=r.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=u(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,a=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=u(n),d=o,m=p["".concat(a,".").concat(d)]||p[d]||b[d]||i;return n?r.a.createElement(m,c(c({ref:t},s),{},{components:n})):r.a.createElement(m,c({ref:t},s))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var s=2;s<i;s++)a[s]=n[s];return r.a.createElement.apply(null,a)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},67:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return a})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return u}));var o=n(2),r=n(6),i=(n(0),n(110)),a={id:"location",title:"onto.Location",sidebar_label:"Location",slug:"/reference/ontology/location"},c={unversionedId:"reference/ontology/location",id:"reference/ontology/location",isDocsHomePage:!1,title:"onto.Location",description:"Definition",source:"@site/docs/reference/ontology/location.md",slug:"/reference/ontology/location",permalink:"/docs/reference/ontology/location",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/reference/ontology/location.md",version:"current",sidebar_label:"Location",sidebar:"docs",previous:{title:"onto.Person",permalink:"/docs/reference/ontology/person"},next:{title:"Single Sign-on",permalink:"/docs/studio/single-sign-on"}},l=[{value:"Definition",id:"definition",children:[{value:"Examples",id:"examples",children:[]},{value:"Limitations",id:"limitations",children:[]}]},{value:"Usage",id:"usage",children:[]}],s={rightToc:l};function u(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(o.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"definition"},"Definition"),Object(i.b)("p",null,'Some classes may refer to locations and these are usually asked using "where". To accomplish this you will set your class to extend the ontology concept of ',Object(i.b)("inlineCode",{parentName:"p"},"onto.Location"),"."),Object(i.b)("h3",{id:"examples"},"Examples"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},'"Where do we have the oldest customer?" could mean "In which city do we have the oldest customer?"')),Object(i.b)("h3",{id:"limitations"},"Limitations"),Object(i.b)("p",null,"If you define multiple classes as Location, it may be harder for Veezoo to disambiguate.\nAlso, it could be that the behavior is not very consistent for the users, e.g. sometimes I see a country, sometimes a city."),Object(i.b)("h2",{id:"usage"},"Usage"),Object(i.b)("p",null,"For this to work, you will have to add an ",Object(i.b)("inlineCode",{parentName:"p"},"extends: onto.Location"),". Like this:"),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-json"}),'kb {\n    class Store {\n        name.en: "Store"\n        \n        from_table: STORES\n        sql: "${STORES.ID}"\n        name_sql.en: "${STORES.NAME}"\n        \n        // Make Store extend a Location\n        extends: onto.Location\n\n        ...\n    }\n}        \n')),Object(i.b)("p",null,"Notice that sometimes your class will already be extending a concept from our ontology (",Object(i.b)("inlineCode",{parentName:"p"},"onto"),"). Many times this will already allow you to ask 'where' questions directly. Here is a list of some of them:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"onto.Country"),Object(i.b)("li",{parentName:"ul"},"onto.State"),Object(i.b)("li",{parentName:"ul"},"onto.City"),Object(i.b)("li",{parentName:"ul"},"onto.PostalCode")))}u.isMDXComponent=!0}}]);