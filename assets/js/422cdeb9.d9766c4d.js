"use strict";(self.webpackChunkveezoo_docs=self.webpackChunkveezoo_docs||[]).push([[4090],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return h}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),u=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},c=function(e){var n=u(e.components);return r.createElement(l.Provider,{value:n},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),p=u(t),d=o,h=p["".concat(l,".").concat(d)]||p[d]||m[d]||i;return t?r.createElement(h,s(s({ref:n},c),{},{components:t})):r.createElement(h,s({ref:n},c))}));function h(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,s=new Array(i);s[0]=d;var a={};for(var l in n)hasOwnProperty.call(n,l)&&(a[l]=n[l]);a.originalType=e,a[p]="string"==typeof e?e:o,s[1]=a;for(var u=2;u<i;u++)s[u]=t[u];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},5110:function(e,n,t){t.r(n),t.d(n,{assets:function(){return c},contentTitle:function(){return l},default:function(){return h},frontMatter:function(){return a},metadata:function(){return u},toc:function(){return p}});var r=t(7462),o=t(3366),i=(t(7294),t(3905)),s=(t(4996),["components"]),a={title:"Column-Level Permission"},l=void 0,u={unversionedId:"authorization/column-level-permission",id:"authorization/column-level-permission",title:"Column-Level Permission",description:"In Veezoo, you have fine-grained control over your data through the ability to define roles and assign them to users. This allows you to dictate which users have access to which data based on their roles. You can extend this control even further by applying column-level permissions within classes using the foruserrole and notforuser_role properties.",source:"@site/docs/authorization/column-level-permission.md",sourceDirName:"authorization",slug:"/authorization/column-level-permission",permalink:"/docs/authorization/column-level-permission",draft:!1,editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/authorization/column-level-permission.md",tags:[],version:"current",frontMatter:{title:"Column-Level Permission"},sidebar:"docs",previous:{title:"Sharing Boards with Roles",permalink:"/docs/authorization/sharing-dashboards-with-roles"},next:{title:"Row-Level Permission",permalink:"/docs/authorization/row-level-permission"}},c={},p=[{value:"Granting Column-Level Permissions with <code>for_user_role</code>",id:"granting-column-level-permissions-with-for_user_role",level:2},{value:"Restricting Column-Level Permissions with <code>not_for_user_role</code>",id:"restricting-column-level-permissions-with-not_for_user_role",level:2}],m={toc:p},d="wrapper";function h(e){var n=e.components,t=(0,o.Z)(e,s);return(0,i.kt)(d,(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"In Veezoo, you have fine-grained control over your data through the ability to define roles and assign them to users. This allows you to dictate which users have access to which data based on their roles. You can extend this control even further by applying column-level permissions within classes using the ",(0,i.kt)("inlineCode",{parentName:"p"},"for_user_role")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"not_for_user_role")," properties."),(0,i.kt)("h2",{id:"granting-column-level-permissions-with-for_user_role"},"Granting Column-Level Permissions with ",(0,i.kt)("inlineCode",{parentName:"h2"},"for_user_role")),(0,i.kt)("p",null,"When defining concepts such as ",(0,i.kt)("inlineCode",{parentName:"p"},"class"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"date"),", etc., you can assign specific roles that are allowed to access this data by using the ",(0,i.kt)("inlineCode",{parentName:"p"},"for_user_role")," property. This property can take multiple values corresponding to the names of roles that have been defined."),(0,i.kt)("p",null,"Here's an example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'kb {\n\n    class Order {\n\n        ...\n\n        number Order_Total {\n            name.en: "Order Total"\n            synonym.en: ["Price", "Revenue", "Amount"]\n\n            for_user_role: ["finance", "executive"]\n\n            unit: onto.Currency.USD\n\n            sql: "${ORDERS.order_total}"\n        }    \n    }\n}\n')),(0,i.kt)("p",null,'In the above example, only users who have been assigned the roles "finance" or "executive" are granted permission to view the ',(0,i.kt)("inlineCode",{parentName:"p"},"Order_Total")," class."),(0,i.kt)("h2",{id:"restricting-column-level-permissions-with-not_for_user_role"},"Restricting Column-Level Permissions with ",(0,i.kt)("inlineCode",{parentName:"h2"},"not_for_user_role")),(0,i.kt)("p",null,"On the other hand, you may want to exclude certain roles from accessing a concept. You can use the ",(0,i.kt)("inlineCode",{parentName:"p"},"not_for_user_role")," property to specify roles that are not allowed to access this data."),(0,i.kt)("p",null,"Here's an example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'kb {\n\n    class Customer {\n\n        ...\n\n        class Customer_Address {\n            name.en: "Customer Address"\n            synonym.en: ["Address"]\n\n            not_for_user_role: "customer_support"\n\n            sql: "${CUSTOMERS.address}"\n        }    \n    }\n}\n')),(0,i.kt)("p",null,'In this example, users who are assigned the role "customer_support" are restricted from viewing the ',(0,i.kt)("inlineCode",{parentName:"p"},"Customer_Address")," class. If multiple roles are specified, then a user with either of the roles listed is limited from viewing this data."),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"Make sure to carefully manage your role assignments and column-level permissions to ensure data security. Regularly review and update your roles and permissions to align with changes in job responsibilities and organizational structure.")))}h.isMDXComponent=!0}}]);