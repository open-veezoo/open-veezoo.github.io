"use strict";(self.webpackChunkveezoo_docs=self.webpackChunkveezoo_docs||[]).push([[2142],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),c=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(i.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(n),d=a,f=p["".concat(i,".").concat(d)]||p[d]||m[d]||o;return n?r.createElement(f,s(s({ref:t},u),{},{components:n})):r.createElement(f,s({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=d;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[p]="string"==typeof e?e:a,s[1]=l;for(var c=2;c<o;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3278:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return i},default:function(){return f},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return p}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),s=["components"],l={id:"class",title:"class",sidebar_label:"What is a class?",slug:"/reference/kb-layer/class"},i=void 0,c={unversionedId:"reference/kb-layer/class/class",id:"reference/kb-layer/class/class",title:"class",description:"Definition",source:"@site/docs/reference/kb-layer/class/class.md",sourceDirName:"reference/kb-layer/class",slug:"/reference/kb-layer/class",permalink:"/docs/reference/kb-layer/class",draft:!1,editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/reference/kb-layer/class/class.md",tags:[],version:"current",frontMatter:{id:"class",title:"class",sidebar_label:"What is a class?",slug:"/reference/kb-layer/class"},sidebar:"docs",previous:{title:"join",permalink:"/docs/reference/kb-layer/general/join"},next:{title:"sql / name_sql / synonym_sql",permalink:"/docs/reference/kb-layer/class/sql"}},u={},p=[{value:"Definition",id:"definition",level:2},{value:"Usage",id:"usage",level:2}],m={toc:p},d="wrapper";function f(e){var t=e.components,n=(0,a.Z)(e,s);return(0,o.kt)(d,(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"definition"},"Definition"),(0,o.kt)("p",null,"If you come from a software background, you may be familiar with the idea of a class as defined in object-oriented programming. In some sense, we are making your data more object-oriented. "),(0,o.kt)("p",null,"So, a class can be defined as a category of things. The best way to understand it is to go over some examples."),(0,o.kt)("p",null,"A class could be something like:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Customer")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Country")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Order")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Movie"))),(0,o.kt)("p",null,"A class can be defined by a SQL table, column or SQL query. For instance, for a table ",(0,o.kt)("inlineCode",{parentName:"p"},"customer(id, name, status)"),", Veezoo will generate 2 classes (",(0,o.kt)("inlineCode",{parentName:"p"},"kb.Customer")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"kb.Status"),") and a relationship ",(0,o.kt)("inlineCode",{parentName:"p"},"with_Status")," between them."),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("p",null,"Let's see how classes are defined in VKL."),(0,o.kt)("p",null,"File: ",(0,o.kt)("em",{parentName:"p"},"hitchhiker/knowledge-base/classes/Customer/class.vkl")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'import: [\n    db.postgres.movie_db.public.ORDERS\n]\n\nkb {\n    class Customer {\n        name.en: "Customer"     \n        synonym.en: "Client"\n        extends: onto.Customer\n        \n        sql: "${ORDERS.customer_id}"\n        name_sql.en:\n          "${ORDERS.customer_firstname} || \' \' || ${ORDERS.customer_lastname}"\n    }\n}\n')),(0,o.kt)("p",null,"Let's break it down in parts:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"general/name"},"name"),": The name of the class in the specified language (",(0,o.kt)("inlineCode",{parentName:"li"},"en")," for English). This is the primary way to refer to this concept in a question and what gets displayed to the user in an answer."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"general/synonym"},"synonym"),': Synonyms specify alternative ways to refer to this concept in a question. In our example, we can say "how many customers", but also "how many clients" and it will mean the same.'),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"class/extends"},"extends"),": By using this optional attribute, you can point your class to a pre-defined ontology class and inherit labels and other functionalities from it. Veezoo Studio already does this automatically to the best of its knowledge.")),(0,o.kt)("p",null,"The glue between the ",(0,o.kt)("inlineCode",{parentName:"p"},"knowledge-base")," layer and the ",(0,o.kt)("inlineCode",{parentName:"p"},"database")," layer is in the ",(0,o.kt)("a",{parentName:"p",href:"class/sql"},"sql"),". Check its reference page to learn more about it."),(0,o.kt)("p",null,"There are more properties you can add to a ",(0,o.kt)("inlineCode",{parentName:"p"},"class")," in VKL. Check the next pages to learn more about them."))}f.isMDXComponent=!0}}]);