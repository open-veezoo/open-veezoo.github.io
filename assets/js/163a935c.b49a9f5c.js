"use strict";(self.webpackChunkveezoo_docs=self.webpackChunkveezoo_docs||[]).push([[2645],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return h}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),d=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},f=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=d(n),f=r,h=c["".concat(s,".").concat(f)]||c[f]||p[f]||i;return n?a.createElement(h,o(o({ref:t},u),{},{components:n})):a.createElement(h,o({ref:t},u))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=f;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:r,o[1]=l;for(var d=2;d<i;d++)o[d]=n[d];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}f.displayName="MDXCreateElement"},9474:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return h},frontMatter:function(){return l},metadata:function(){return d},toc:function(){return c}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),o=["components"],l={id:"date_interval",title:"date_interval"},s=void 0,d={unversionedId:"reference/kb-layer/attribute/date_interval",id:"reference/kb-layer/attribute/date_interval",title:"date_interval",description:"Definition",source:"@site/docs/reference/kb-layer/attribute/date_interval.md",sourceDirName:"reference/kb-layer/attribute",slug:"/reference/kb-layer/attribute/date_interval",permalink:"/docs/reference/kb-layer/attribute/date_interval",draft:!1,editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/reference/kb-layer/attribute/date_interval.md",tags:[],version:"current",frontMatter:{id:"date_interval",title:"date_interval"},sidebar:"docs",previous:{title:"string",permalink:"/docs/reference/kb-layer/attribute/string"},next:{title:"unit",permalink:"/docs/reference/kb-layer/attribute/unit"}},u={},c=[{value:"Definition",id:"definition",level:2},{value:"Usage",id:"usage",level:2},{value:"Behavior",id:"behavior",level:2}],p={toc:c},f="wrapper";function h(e){var t=e.components,n=(0,r.Z)(e,o);return(0,i.kt)(f,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"definition"},"Definition"),(0,i.kt)("p",null,"A ",(0,i.kt)("inlineCode",{parentName:"p"},"date_interval")," is a date attribute defined as the interval between a start and end date."),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("p",null,"Date interval attributes must be defined using a ",(0,i.kt)("inlineCode",{parentName:"p"},"definition")," specifying the start and end date with the ",(0,i.kt)("inlineCode",{parentName:"p"},"interval")," function.\nThey currently cannot be defined using ",(0,i.kt)("inlineCode",{parentName:"p"},"sql"),", in contrast to other attributes."),(0,i.kt)("p",null,"Let's consider the example of modeling music festivals, which start at a certain date and end at another:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'kb {\n\n    class MusicFestival {\n        # Use the interval by default if not otherwise specified, instead of StartDate or EndDate\n        event_date: Date\n\n        ...\n\n        date StartDate { ... }\n        date EndDate { ... }\n\n        date_interval Date {\n            name.en: "Festival Date"\n\n            definition: "interval(this.StartDate, this.EndDate)"\n\n            # Must be the same as StartDate and EndDate\n            datetime_format: DayFormat\n        }\n    }\n}\n')),(0,i.kt)("p",null,"Note that both the start and end are inclusive, meaning that they are inside the interval. If the end should be exclusive, subtract one day (or the appropriate granularity). The start and end date may be both the same, meaning that only that single date is in the interval."),(0,i.kt)("h2",{id:"behavior"},"Behavior"),(0,i.kt)("p",null,"Date intervals can be used in most questions where ",(0,i.kt)("a",{parentName:"p",href:"date"},"date"),' attributes can be used, e.g. in questions like "How many festivals were there this year" or "Number of festivals per year".\nHowever, they come with special behavior:'),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"A date interval is considered to be in another date if there is an overlap between the two",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"For example, the date interval from ",(0,i.kt)("inlineCode",{parentName:"li"},"2019-12-01")," to ",(0,i.kt)("inlineCode",{parentName:"li"},"2020-01-01")," will be considered to be in both ",(0,i.kt)("inlineCode",{parentName:"li"},"2019")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"2020")))),(0,i.kt)("li",{parentName:"ul"},"Sorting ascendingly (or descendingly) will be based on the start (or end) date respectively",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},'For example, asking for "first festival" will return the festival that started earliest, while "most recent festival" will return the festival that ended last'))),(0,i.kt)("li",{parentName:"ul"},"When grouping by a date interval, it will appear in each group that has an overlap with the interval",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},'For example, asking "number of festivals per month" will count a festival towards all overlapping months, i.e. a festival starting at the end of one month and ending at the start of the next month will be counted towards both months'),(0,i.kt)("li",{parentName:"ul"},"An ",(0,i.kt)("a",{parentName:"li",href:"extends/calendar-table"},"onto.CalendarTable")," needs to be defined somewhere in the knowledge graph for this to work, such that all dates inside the interval can be filled in"))),(0,i.kt)("li",{parentName:"ul"},"Empty intervals or intervals where the end date comes before the start date are currently not supported, the behavior is undefined")),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"Date intervals are prone to double counting, e.g. the same festival being counted towards two different years.\nIf this is not intended, consider using a simple ",(0,i.kt)("a",{parentName:"p",href:"date"},"date")," attribute instead, choosing a single date that the class should be counted at, e.g. the start, end or midpoint date of the interval.")))}h.isMDXComponent=!0}}]);