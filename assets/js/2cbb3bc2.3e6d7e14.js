"use strict";(self.webpackChunkveezoo_docs=self.webpackChunkveezoo_docs||[]).push([[281],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),d=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=d(e.components);return a.createElement(l.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=d(n),h=o,m=u["".concat(l,".").concat(h)]||u[h]||p[h]||i;return n?a.createElement(m,r(r({ref:t},c),{},{components:n})):a.createElement(m,r({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,r=new Array(i);r[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:o,r[1]=s;for(var d=2;d<i;d++)r[d]=n[d];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},954:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return s},metadata:function(){return d},toc:function(){return u}});var a=n(7462),o=n(3366),i=(n(7294),n(3905)),r=(n(4996),["components"]),s={title:"Embedded Analytics with Veezoo"},l=void 0,d={unversionedId:"embedded/embedded-guide",id:"embedded/embedded-guide",title:"Embedded Analytics with Veezoo",description:"Veezoo's Embedded Analytics offers an integration solution that enhances your applications with our sophisticated, natural language querying (NLQ) data analytics and visualization capabilities.",source:"@site/docs/embedded/embedded-guide.md",sourceDirName:"embedded",slug:"/embedded/embedded-guide",permalink:"/docs/embedded/embedded-guide",draft:!1,editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/embedded/embedded-guide.md",tags:[],version:"current",frontMatter:{title:"Embedded Analytics with Veezoo"},sidebar:"docs",previous:{title:"Row-Level Permission",permalink:"/docs/authorization/row-level-permission"},next:{title:"Why and how to sync?",permalink:"/docs/kg-sync/"}},c={},u=[{value:"Value Proposition",id:"value-proposition",level:2},{value:"Characteristics",id:"characteristics",level:2},{value:"How to Get Started with Embedding Veezoo",id:"how-to-get-started-with-embedding-veezoo",level:2},{value:"1. Contact Us to Enable Embedded Analytics",id:"1-contact-us-to-enable-embedded-analytics",level:3},{value:"2. Configure Allowed Hosts",id:"2-configure-allowed-hosts",level:3},{value:"3. Configure a Public Key to setup JWT (JSON Web Tokens)",id:"3-configure-a-public-key-to-setup-jwt-json-web-tokens",level:3},{value:"4. Configure Tenants in Veezoo",id:"4-configure-tenants-in-veezoo",level:3},{value:"5. Provide Access to a Knowledge Graph for a Tenant",id:"5-provide-access-to-a-knowledge-graph-for-a-tenant",level:3},{value:"6. Publish Changes to Tenants",id:"6-publish-changes-to-tenants",level:3},{value:"7. Define Authorization Logic for Tenants",id:"7-define-authorization-logic-for-tenants",level:3},{value:"What are Variables?",id:"what-are-variables",level:4},{value:"A. Authorization over virtual_table",id:"a-authorization-over-virtual_table",level:4},{value:"B. Authorization over Database Connection",id:"b-authorization-over-database-connection",level:4},{value:"8. Configure Shared and Non-Shared Entities",id:"8-configure-shared-and-non-shared-entities",level:3},{value:"9. Embed Veezoo into Your Application (iFrame + JWT)",id:"9-embed-veezoo-into-your-application-iframe--jwt",level:3}],p={toc:u},h="wrapper";function m(e){var t=e.components,s=(0,o.Z)(e,r);return(0,i.kt)(h,(0,a.Z)({},p,s,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Veezoo's Embedded Analytics offers an integration solution that enhances your applications with our sophisticated, natural language querying (NLQ) data analytics and visualization capabilities."),(0,i.kt)("h2",{id:"value-proposition"},"Value Proposition"),(0,i.kt)("p",null,"Embedded Analytics enables the direct integration of Veezoo's conversational data analytics engine into your application, providing a streamlined and enhanced user experience. This integration empowers your users with immediate access to insights, detailed visualizations, and extensive analytics without leaving your application's interface."),(0,i.kt)("h2",{id:"characteristics"},"Characteristics"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Seamless integration into your application for an improved user experience."),(0,i.kt)("li",{parentName:"ul"},"Supports multi-tenant architectures, providing personalized data experiences."),(0,i.kt)("li",{parentName:"ul"},"Utilizes JWT (JSON Web Tokens) for secure user authentication.")),(0,i.kt)("h2",{id:"how-to-get-started-with-embedding-veezoo"},"How to Get Started with Embedding Veezoo"),(0,i.kt)("h3",{id:"1-contact-us-to-enable-embedded-analytics"},"1. Contact Us to Enable Embedded Analytics"),(0,i.kt)("p",null,"The first step is to ",(0,i.kt)("a",{parentName:"p",href:"https://www.veezoo.com/contact"},"contact us")," if you are interested in the embedded functionality of Veezoo. This feature is not part of the Free tier and comes with a tailored pricing on request."),(0,i.kt)("h3",{id:"2-configure-allowed-hosts"},"2. Configure Allowed Hosts"),(0,i.kt)("p",null,"For secure embedding, you need to specify the allowed hosts in Veezoo's admin settings. This ensures that your Veezoo content is only accessible from your designated, trusted domains."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Admin Embedded Configuration",src:n(6755).Z,width:"1465",height:"1006"})),(0,i.kt)("h3",{id:"3-configure-a-public-key-to-setup-jwt-json-web-tokens"},"3. Configure a Public Key to setup JWT (JSON Web Tokens)"),(0,i.kt)("p",null,"Veezoo uses JWT for user authentication within Embedded Analytics. To enable secure access to relevant data and analytics, your application will have to generate a JWT on your server and pass it to Veezoo. For that to work, you will need to configure in Veezoo Admin the public key for a private key that will be used by your application to sign the token."),(0,i.kt)("p",null,"If you don't know how to create a key pair, follow the instructions provided in Veezoo Admin."),(0,i.kt)("h3",{id:"4-configure-tenants-in-veezoo"},"4. Configure Tenants in Veezoo"),(0,i.kt)("p",null,"Veezoo's Embedded Analytics supports multi-tenant architectures. A tenant corresponds usually to a customer of yours, which may have multiple users in your application. Veezoo needs to know about the existence of these tenants, so that when a user accesses Veezoo through your application it will access the Knowledge Graph with the right authorization logic."),(0,i.kt)("p",null,"To configure Tenants in Veezoo, go to ",(0,i.kt)("a",{parentName:"p",href:"https://app.veezoo.com/admin/embedded/tenants"},"Veezoo Admin > Embedded > Tenants"),". "),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"Currently these need to be manually added over the UI, but we plan to release a Veezoo Admin API to do this programatically.")),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Admin Embedded Tenants",src:n(2048).Z,width:"1480",height:"472"})),(0,i.kt)("p",null,"You will have to give it a name and a Tenant ID, which is the ID your application uses to identify a tenant. This will be important for mapping a user to the right tenant as part of the JWT authentication."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Admin Embedded Create Tenant",src:n(3648).Z,width:"618",height:"370"})),(0,i.kt)("h3",{id:"5-provide-access-to-a-knowledge-graph-for-a-tenant"},"5. Provide Access to a Knowledge Graph for a Tenant"),(0,i.kt)("p",null,"Choose the Knowledge Graph that will be available for your tenants and configure Tenant Access in Studio."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Studio &gt; Tenant Access",src:n(2324).Z,width:"1699",height:"624"})),(0,i.kt)("p",null,"Veezoo will generate a different view of the same Knowledge Graph for each tenant. You will still manage only the main Knowledge Graph, but in the next steps you will configure how the authorization logic works for each tenant. This way, users will see different data in their answers and dashboards and different entities in the AutoComplete."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Studio &gt; Tenant Access &gt; Create",src:n(8581).Z,width:"617",height:"236"})),(0,i.kt)("h3",{id:"6-publish-changes-to-tenants"},"6. Publish Changes to Tenants"),(0,i.kt)("p",null,"While you develop your Knowledge Graph further, you will want to eventually publish the changes to your tenants. "),(0,i.kt)("p",null,"To do that, you will have to 'update' them over the UI in ",(0,i.kt)("inlineCode",{parentName:"p"},"Studio > Tenant Access"),". Select which ones to update (or all) and click on ",(0,i.kt)("inlineCode",{parentName:"p"},"Update"),"."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Studio &gt; Tenant Access &gt; Update",src:n(1192).Z,width:"1153",height:"334"})),(0,i.kt)("h3",{id:"7-define-authorization-logic-for-tenants"},"7. Define Authorization Logic for Tenants"),(0,i.kt)("p",null,"Veezoo supports granular control over data access through variables and row-level permissions. This allows you to define which rows of data within a KG are accessible by a specific tenant."),(0,i.kt)("h4",{id:"what-are-variables"},"What are Variables?"),(0,i.kt)("p",null,"You can think of variables as placeholders defined in the Knowledge Graph and which can have a different value assigned per tenant. These variables can be used in SQL queries or for the database connection, so you can tell Veezoo how to restrict the data for each tenant."),(0,i.kt)("p",null,"To create variables for your Knowledge Graph, you will have to create a new file of type 'Variable' in Studio."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Studio &gt; Files &gt; Variables",src:n(1828).Z,width:"301",height:"561"})),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Studio &gt; Files &gt; Variables &gt; Modal",src:n(7811).Z,width:"458",height:"294"})),(0,i.kt)("p",null,"Example content:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"variable company_id {\n  # Leave blank\n}\n\n# You can also have multiple in the same file\nvariable date_cutoff {\n  # Leave blank\n}\n")),(0,i.kt)("p",null,"If you declare a new variable, you will have to first publish these changes to your tenant views of the Knowledge Graph, before you are able to assign values. Follow the same steps as in the section 'Publish Changes to Tenants' above."),(0,i.kt)("p",null,"Now you can assign a value to these variables for each tenant, incl. for the main Knowledge Graph, by going on the Tenant Access page and clicking on the pencil at the Variables column."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Studio &gt; Tenant Access &gt; Variables",src:n(1584).Z,width:"925",height:"197"})),(0,i.kt)("p",null,"Now let's see how we can use these variables to restrict data access."),(0,i.kt)("h4",{id:"a-authorization-over-virtual_table"},"A. Authorization over virtual_table"),(0,i.kt)("p",null,"With ",(0,i.kt)("a",{parentName:"p",href:"/docs/reference/db-layer/virtual-table"},"virtual_table")," you can define SQL with special templating to specify ",(0,i.kt)("a",{parentName:"p",href:"/docs/authorization/row-level-permission"},"row-level authorization")," needed for your tenants. Read the related articles linked to understand more about how to work with it."),(0,i.kt)("p",null,"Here is how an example on how to use virtual_table in combination with variables (e.g. ",(0,i.kt)("inlineCode",{parentName:"p"},"tenant_id")," here) to restrict access to the data:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'import: [\n    db.storage.veezoo.USER\n]\n\ndb.storage.veezoo {\n    virtual_table QUESTIONS {\n\n        identifier: "QUESTIONS"\n        \n        # Only show questions from the organization of the tenant\n        virtual_table_sql: \n         """\n            SELECT\n              Q.*\n            FROM\n              QUESTIONS Q JOIN USER U ON Q.USER_ID = U.ID\n            WHERE\n              U.ORGANIZATION_ID = ${quote(tenant_id)}\n            """\n        \n        \n        column ID {\n            identifier: "ID"\n            is_primary_key: true\n            primitive_type: "varchar"\n        }\n\n        ...\n   }\n}\n')),(0,i.kt)("h4",{id:"b-authorization-over-database-connection"},"B. Authorization over Database Connection"),(0,i.kt)("p",null,"Alternatively, you may have a different way of handling your customer's data. One common approach is to have separate schemas for each client."),(0,i.kt)("p",null,"Veezoo allows you to configure this by using variables in the ",(0,i.kt)("inlineCode",{parentName:"p"},"Configuration > Database Connection"),"."),(0,i.kt)("p",null,"Here is an example using MySQL:"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Studio &gt; Configuration &gt; Database Connection",src:n(9541).Z,width:"820",height:"887"})),(0,i.kt)("h3",{id:"8-configure-shared-and-non-shared-entities"},"8. Configure Shared and Non-Shared Entities"),(0,i.kt)("p",null,"Once you've configured the authorization logic for the tenants, you will want to check which ",(0,i.kt)("a",{parentName:"p",href:"/docs/reference/kb-layer/entity"},"Entities")," should be shared / common to all tenants and which ones are tenant-specific."),(0,i.kt)("p",null,"As an example, let's say you have an HR application with information about the hiring process, where there is a status for it. It could be that ",(0,i.kt)("inlineCode",{parentName:"p"},"Status")," is a class with entities that are common to all tenants. In this case, you don't have to do anything specifically for it."),(0,i.kt)("p",null,"But let's say you have another class called ",(0,i.kt)("inlineCode",{parentName:"p"},"Candidate"),". In this case, each tenant will want to see its own candidates. For that, apart from configuring the authorization logic described in the previous section, you will have to delete the entities of the class ",(0,i.kt)("inlineCode",{parentName:"p"},"Candidate")," and select it as a class to be synced (cf. ",(0,i.kt)("a",{parentName:"p",href:"/docs/kg-sync"},"Knowledge Graph Synchronization"),"). "),(0,i.kt)("p",null,'Don\'t forget to "Update" the tenant Knowledge Graphs as described in step 6.'),(0,i.kt)("h3",{id:"9-embed-veezoo-into-your-application-iframe--jwt"},"9. Embed Veezoo into Your Application (iFrame + JWT)"),(0,i.kt)("p",null,"You can integrate Veezoo into your software by incorporating an iframe that points to Veezoo's domain and uses the generated JWT for user authentication."),(0,i.kt)("p",null,"To embed Veezoo into your application, you will first need to generate a JSON Web Token (JWT). This token will then be included in the URL used to load the Veezoo interface into an iframe."),(0,i.kt)("p",null,"Here's a simplified example of how to accomplish this using Python and Flask:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'from flask import Flask, render_template\nimport jwt\nfrom datetime import datetime, timedelta\n\napp = Flask(__name__)\n\ndef generate_jwt(payload, private_key, expiration_minutes=5):\n    headers = {\n        "typ": "JWT",\n        "alg": "RS256"\n    }\n\n    # "iat" (Issued At) claim\n    iat = datetime.utcnow()\n\n    # "exp" (Expiration Time) claim\n    exp = iat + timedelta(minutes=expiration_minutes)\n\n    # Update the payload with "iat" and "exp" claims\n    payload.update({\n        "iat": iat,\n        "exp": exp,\n    })\n\n    # Generate JWT\n    encoded_jwt = jwt.encode(payload, private_key, algorithm="RS256", headers=headers)\n    \n    return encoded_jwt\n\n@app.route("/")\ndef home():\n    payload = {\n        # This is the ID for the tenant you configured in Veezoo Admin in a previous step\n        "tenantId": "1234-5678-1020-3040",\n        # This is an ID for the user\n        "sub": "12345",\n        "email": "user@example.com",\n        "firstName": "John",\n        "lastName": "Doe",\n    }\n\n    # Note: private_key should be a string in PEM format. It typically starts with\n    # \'-----BEGIN PRIVATE KEY-----\' and ends with \'-----END PRIVATE KEY-----\'.\n    private_key = "<your-private-key-here>"\n    jwt = generate_jwt(payload, private_key)\n\n    veezoo_url = f"https://company.app.veezoo.com?jwt={jwt}&embedded=true"\n\n    return render_template("index.html", veezoo_url=veezoo_url)\n')),(0,i.kt)("p",null,"In this example, your ",(0,i.kt)("inlineCode",{parentName:"p"},"index.html")," file, placed in the ",(0,i.kt)("inlineCode",{parentName:"p"},"templates")," directory, would look something like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},'<html>\n  <body style="background-color: #f8f8f8; margin: 0; display: flex; align-items: center; justify-content: center; padding: 50px;">\n    <iframe\n      src="{{ veezoo_url }}"\n      frameborder="0"\n      style="width: 100%; height: 100%; border: 1px solid #ddd;"\n    >\n    </iframe>\n  </body>\n</html>\n')),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"If you encounter any issues or have questions about embedding Veezoo into your application, don't hesitate to ",(0,i.kt)("a",{parentName:"p",href:"https://www.veezoo.com/contact"},"contact us")," for support.")),(0,i.kt)("p",null,"With Veezoo's Embedded Analytics, you can enhance the value of your application by providing an integrated, dynamic, and interactive data analytics experience, powered by our sophisticated NLQ capabilities. This ensures your users have immediate access to insights and data-driven decision-making tools right within your application, improving user engagement and overall satisfaction."))}m.isMDXComponent=!0},6755:function(e,t,n){t.Z=n.p+"assets/images/admin-embedded-config-23661a1ca8245c2a00b89c62f0fabfab.png"},3648:function(e,t,n){t.Z=n.p+"assets/images/admin-embedded-create-tenant-48815cc929a93ccab6edeb1a35939e4c.png"},2048:function(e,t,n){t.Z=n.p+"assets/images/admin-embedded-tenants-36358332ca208aa84016b19220dfd87b.png"},9541:function(e,t,n){t.Z=n.p+"assets/images/studio-configuration-db-variables-a1464783efb084a395f807e94833dbc0.png"},8581:function(e,t,n){t.Z=n.p+"assets/images/studio-create-tenant-kg-4875831d0e540af7b98c0537387681ca.png"},7811:function(e,t,n){t.Z=n.p+"assets/images/studio-create-variables-modal-1c4d32b2b3622a3cf33773e4b1904606.png"},1828:function(e,t,n){t.Z=n.p+"assets/images/studio-create-variables-a91a7383cf0bf2cae25247cd9726a030.png"},1584:function(e,t,n){t.Z=n.p+"assets/images/studio-edit-variables-dab447a31ee758be6df5a65f3a195dec.png"},2324:function(e,t,n){t.Z=n.p+"assets/images/studio-tenant-access-24387b37b80867f98e0e5c3df9594a90.png"},1192:function(e,t,n){t.Z=n.p+"assets/images/studio-update-tenants-e3c7288c92fb0c338a64be67110d50e3.png"}}]);