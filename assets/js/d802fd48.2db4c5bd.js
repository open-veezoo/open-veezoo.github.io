"use strict";(self.webpackChunkveezoo_docs=self.webpackChunkveezoo_docs||[]).push([[2811],{3905:function(e,t,a){a.d(t,{Zo:function(){return p},kt:function(){return c}});var n=a(7294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var s=n.createContext({}),d=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=d(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=d(a),h=o,c=u["".concat(s,".").concat(h)]||u[h]||m[h]||r;return a?n.createElement(c,i(i({ref:t},p),{},{components:a})):n.createElement(c,i({ref:t},p))}));function c(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=a.length,i=new Array(r);i[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var d=2;d<r;d++)i[d]=a[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}h.displayName="MDXCreateElement"},4772:function(e,t,a){a.r(t),a.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return c},frontMatter:function(){return l},metadata:function(){return d},toc:function(){return u}});var n=a(7462),o=a(3366),r=(a(7294),a(3905)),i=["components"],l={},s="How to embed Veezoo: a Demonstration",d={unversionedId:"embedded/hyperstore-guide",id:"embedded/hyperstore-guide",title:"How to embed Veezoo: a Demonstration",description:"This is a step-by-step guide on how to set up a locally hosted demo website, which has Veezoo embedded. It is meant to give users a first impression on how you could integrate the power of Veezoo into your product. This guide can be viewed as a sort of companion to the embedded Veezoo docs. Those docs are much more general and explain all different options available, as well as all the details already implemented in this demo. This guide repeats some of the points mentioned there, so that this is all you need to set it up. The goal here is not to demonstrate all the details, but to get a clean, working version (with all basic features) up and running as easily as possible.",source:"@site/docs/embedded/hyperstore-guide.mdx",sourceDirName:"embedded",slug:"/embedded/hyperstore-guide",permalink:"/docs/embedded/hyperstore-guide",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Embedded Analytics with Veezoo",permalink:"/docs/embedded/embedded-guide"},next:{title:"Customizing Veezoo's Look",permalink:"/docs/themes/"}},p={},u=[{value:"1. Requirements",id:"1-requirements",level:2},{value:"2. Our Demo: the Hyperstore",id:"2-our-demo-the-hyperstore",level:2},{value:"3. Getting started",id:"3-getting-started",level:2},{value:"4. Initial Veezoo Configurations",id:"4-initial-veezoo-configurations",level:2},{value:"5. Create Tenants",id:"5-create-tenants",level:2},{value:"6. Setting up the Local Website",id:"6-setting-up-the-local-website",level:2},{value:"7. Limiting access and Virtual Tables",id:"7-limiting-access-and-virtual-tables",level:2}],m={toc:u},h="wrapper";function c(e){var t=e.components,l=(0,o.Z)(e,i);return(0,r.kt)(h,(0,n.Z)({},m,l,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"how-to-embed-veezoo-a-demonstration"},"How to embed Veezoo: a Demonstration"),(0,r.kt)("p",null,"This is a step-by-step guide on how to set up a locally hosted demo website, which has Veezoo embedded. It is meant to give users a first impression on how you could integrate the power of Veezoo into your product. This guide can be viewed as a sort of companion to the ",(0,r.kt)("a",{parentName:"p",href:"https://docs.veezoo.com/docs/embedded/embedded-guide/"},"embedded Veezoo docs"),". Those docs are much more general and explain all different options available, as well as all the details already implemented in this demo. This guide repeats some of the points mentioned there, so that this is all you need to set it up. The goal here is not to demonstrate all the details, but to get a clean, working version (with all basic features) up and running as easily as possible."),(0,r.kt)("p",null,"This project inludes:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"code to host the demo website on your local machine"),(0,r.kt)("li",{parentName:"ul"},"a spreadsheet containing the fictional data")),(0,r.kt)("div",{style:{display:"flex",justifyContent:"center"}},(0,r.kt)("iframe",{width:"800",height:"500",src:"https://www.youtube.com/embed/udtZiiCilro?si=rMxGbeeGMsAzcteA",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",allowfullscreen:!0})),(0,r.kt)("h2",{id:"1-requirements"},"1. Requirements"),(0,r.kt)("p",null,"To run this project, you need:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"the code for the website, as well as the spreadsheet with the data (download ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/open-veezoo/embedded-veezoo-demo.git"},"here"),"). Alternatively you can integrate your own dataset just as well, though this tutorial will assume you use the dataset provided (This will mainly matter in step 5., where it will be mentioned again)."),(0,r.kt)("li",{parentName:"ul"},"a Veezoo account that has embedding enabled (contact Veezoo to unlock this feature) "),(0,r.kt)("li",{parentName:"ul"},"enough available ",(0,r.kt)("em",{parentName:"li"},"knowledge graphs")," (at least 2) and ",(0,r.kt)("em",{parentName:"li"},"users")),(0,r.kt)("li",{parentName:"ul"},"access to a data warehouse like PostgreSQL or Big Query.")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Veezoo embedding is not compatible with spreadsheets directly uploaded to Veezoo.")),(0,r.kt)("h2",{id:"2-our-demo-the-hyperstore"},"2. Our Demo: the Hyperstore"),(0,r.kt)("p",null,"A short note on the demo we are building: the Hyperstore. The Hyperstore is a fictional online marketplace, where different vendors can sell their products. A lot of products are ordered and shipped to customers all over the US. All these transactions create a lot of data of course, which are saved in three tables: ",(0,r.kt)("em",{parentName:"p"},"Customer"),", ",(0,r.kt)("em",{parentName:"p"},"Order")," and ",(0,r.kt)("em",{parentName:"p"},"Product"),". We are now implementing a back end for our vendors (currently three), which would like to get insights from their data. Now, we as managers of Hyperstore want to give our vendors as much insight as possible, though only about their own transactions. That's why we naturally came to the conclusion, we have to implement Veezoo."),(0,r.kt)("h2",{id:"3-getting-started"},"3. Getting started"),(0,r.kt)("p",null,"To get started, upload the ",(0,r.kt)("em",{parentName:"p"},"hyperstore")," spreadsheet contained in this repo to your data warehouse (in case you don't want to use your own dataset). If you don't already have one, create a Veezoo account and make sure it includes at least 2 ",(0,r.kt)("em",{parentName:"p"},"knowledge graphs"),". Either use a free trial for a higher tier account, or contact Veezoo to enable a second ",(0,r.kt)("em",{parentName:"p"},"knowledge graphs")," in your free account. Connect it to your data warehouse, as you would for regular Veezoo usage. You can follow ",(0,r.kt)("a",{parentName:"p",href:"https://docs.veezoo.com/docs/"},"this guide")," (as mentioned before, connecting to an Excel spreadsheet will not work). Select the data you want to work with and configure it to your desires and ask a couple of questions to ensure that everything is working properly."),(0,r.kt)("p",null,"Once everything looks fine, contact Veezoo to enable embedding. This can only be done manually by Veezoo. "),(0,r.kt)("h2",{id:"4-initial-veezoo-configurations"},"4. Initial Veezoo Configurations"),(0,r.kt)("p",null,"Once you have been granted access to the embedded option, "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"open ",(0,r.kt)("em",{parentName:"p"},"Veezoo Admin")," and navigate to ",(0,r.kt)("em",{parentName:"p"},"Embedded")," >> ",(0,r.kt)("em",{parentName:"p"},"Configuration")," and make sure the Toggle Switch is ",(0,r.kt)("strong",{parentName:"p"},"ON")," (Embedding is enabled). ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"For secure embedding, you need to specify the allowed hosts. This ensures that your Veezoo content is only accessible from your designated, trusted domains. In our case this means add ",(0,r.kt)("a",{parentName:"p",href:"http://127.0.0.1:5000/"},"http://127.0.0.1:5000/")," (local host) as an allowed origin. ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Veezoo supports ",(0,r.kt)("a",{parentName:"p",href:"/docs/single-sign-on/jwt"},"JWT")," for user authentication within Embedded Analytics. To enable secure access to relevant data and analytics, your application will have to generate a JWT on your server and pass it to Veezoo. For that to work, we need to configure in ",(0,r.kt)("em",{parentName:"p"},"Veezoo Admin")," the public key for a private key that will be used by your application to sign the token."))),(0,r.kt)("p",null,"If you don't know how to create a key pair, follow the instructions displayed after clicking on ",(0,r.kt)("em",{parentName:"p"},"Follow the steps below to generate a 2048-bit RSA key pair"),". Add the public key as text in the corresponding field."),(0,r.kt)("h2",{id:"5-create-tenants"},"5. Create Tenants"),(0,r.kt)("p",null,"To access Veezoo via embedding, you have to specify the tenant you are. Tenants can later be used to restrict access of users to certain parts of your data (in our example, we want vendors only to be able to access data about their own transactions). As a start, we will create 4 of them."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"In ",(0,r.kt)("em",{parentName:"p"},"Veezoo Admin"),", navigate to ",(0,r.kt)("em",{parentName:"p"},"Embedded")," >> ",(0,r.kt)("em",{parentName:"p"},"Tenants"),", click on ",(0,r.kt)("em",{parentName:"p"},"CREATE"),". ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},'Set the ID and name "shop_admin" and click on ',(0,r.kt)("em",{parentName:"p"},"CREATE"),". ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Create 3 additional tenants: "),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"ID"),' "furniture" with ',(0,r.kt)("em",{parentName:"li"},"Name"),' "CozyStuff"'),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"ID"),' "office_supplies" with ',(0,r.kt)("em",{parentName:"li"},"Name"),' "AssistanceToTheManager"'),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"ID"),' "technology" with ',(0,r.kt)("em",{parentName:"li"},"Name"),' "TrendyTech"')))),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Admin Embedded Configuration",src:a(3825).Z,width:"3358",height:"1298"}),"studio-tenant-variables.png"),(0,r.kt)("p",null,"These represent an Admin of Hyperstore (who will see everything) and the three vendors. We now have to grant these tenants access to a specific ",(0,r.kt)("em",{parentName:"p"},"knowledge graph"),". "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Open ",(0,r.kt)("em",{parentName:"p"},"Veezoo Studio")," and select the ",(0,r.kt)("em",{parentName:"p"},"hyperstore knowledge graph")," you created earlier and click on ",(0,r.kt)("em",{parentName:"p"},"Tenant Access"),". ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Click on ",(0,r.kt)("em",{parentName:"p"},"CREATE")," to add all your newly created tenants. ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Click on the pen-icon, set the variables for the default tenant and ",(0,r.kt)("em",{parentName:"p"},"ShopAdmin")," to 0, ",(0,r.kt)("em",{parentName:"p"},"Furniture")," to 1, ",(0,r.kt)("em",{parentName:"p"},"Office Supplies")," to 2 and ",(0,r.kt)("em",{parentName:"p"},"Technology")," to 3."))),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Admin Embedded Configuration",src:a(8230).Z,width:"3360",height:"1450"})),(0,r.kt)("p",null,"Veezoo is now ready for embedding."),(0,r.kt)("h2",{id:"6-setting-up-the-local-website"},"6. Setting up the Local Website"),(0,r.kt)("p",null,"The website is created using Python Flask. First, install the libraries ",(0,r.kt)("inlineCode",{parentName:"p"},"cryptography"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"pyjwt"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"uuid")," with pip. To locally run the website, there are a couple of things you have to change in the code. "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Open the ",(0,r.kt)("inlineCode",{parentName:"p"},"app.py"),' file. Insert your private key where it says "',(0,r.kt)("em",{parentName:"p"},"INSERT PRIVATE KEY HERE"),'". This is the one you previously created and corresponds to the public key you added to Veezoo. ')),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Take a look at the functions ",(0,r.kt)("inlineCode",{parentName:"p"},"Admin()"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Flavia()"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Oliver()")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"Tom()"),". Here we have to adjust the URLs. In the second to last line of each function it currently says:"),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},'veezoo_url = f"https://embedded-demo.app.veezoo.com?jwt={jwt}&embedded=true"'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Take a look at Veezoo in your browsers and check what the domain is. It should be something like ",(0,r.kt)("inlineCode",{parentName:"p"},"<yourname>.app.veezoo.com/..."),". Back in the python code, change ",(0,r.kt)("inlineCode",{parentName:"p"},"embedded-demo")," in each function to whatever ",(0,r.kt)("inlineCode",{parentName:"p"},"<yourname>")," is. ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Open the four HTML files ",(0,r.kt)("inlineCode",{parentName:"p"},"Admin.html"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Flavia.html"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Oliver.html")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"Tom.html"),". ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"In each file, there are two places in the code where it says ",(0,r.kt)("inlineCode",{parentName:"p"},"https://embedded-demo.app.veezoo.com"),". Change every instance to ",(0,r.kt)("inlineCode",{parentName:"p"},"https://<yourname>.app.veezoo.com"),"."))),(0,r.kt)("p",null,"You are now ready to run the code. When you do so, you can open a browser and go to ",(0,r.kt)("a",{parentName:"p",href:"http://127.0.0.1:5000/"},"http://127.0.0.1:5000/"),' to see your newly created website. If you are using Chrome (which I recommend), I would suggest you open a guest-tab (click on your profile in the top right corner, click on "guest"), otherwise you have to clear your cookies every time you open ',(0,r.kt)("em",{parentName:"p"},"Veezoo Studio")," again. "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"On the page, you should see on the top right a ",(0,r.kt)("em",{parentName:"p"},"Sign in!")," button. Click on it and choose a user. You can now enjoy the full embedded Veezoo experience.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"As this is a demo site, most buttons are for decoration, but if you click on ",(0,r.kt)("em",{parentName:"p"},"Dashboards")," you will see an overview of this user's dashboards. You can display them by clicking on them. As in regular Veezoo, you can create new dashboards in the chat, which then will also show up here. These boards are visible only be visible to the user who created them (just like regular Veezoo)."))),(0,r.kt)("h2",{id:"7-limiting-access-and-virtual-tables"},"7. Limiting access and Virtual Tables"),(0,r.kt)("p",null,"So far we have four users on our website. They all can create their own boards, but we want to go a bit further. The main advantage of having different tenants (and not just different users) is to limit their access to the database, which is what we are going to do next."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"The next steps are pretty specific to the Hyperstore database. If you are using your own, you can of course still follow along, but of course you won't be able to copy everything 1:1.")),(0,r.kt)("p",null,"As mentioned above, three of our four tenants represent different vendors who use our Hyperstore platform to sell their products. We would like to restrict their access to the database, such that they can only see their products, orders of their products and customers who have bought their products. Veezoo offers two ways to restrict access: ",(0,r.kt)("em",{parentName:"p"},"Authorization over Virtual Tables")," and ",(0,r.kt)("em",{parentName:"p"},"Authorization over Database Connection"),". In this demo, we are going to use ",(0,r.kt)("em",{parentName:"p"},"Virtual Tables"),". If you are interested ",(0,r.kt)("em",{parentName:"p"},"Authorization over Database Connection"),", you can find more information about it in the ",(0,r.kt)("a",{parentName:"p",href:"https://docs.veezoo.com/docs/embedded/embedded-guide"},"general embedding guide")),(0,r.kt)("p",null,"In Veezoo, we can create ",(0,r.kt)("em",{parentName:"p"},"Variables")," associated with tenants, which then can be used in the SQL. By default, each tenant already has a ",(0,r.kt)("inlineCode",{parentName:"p"},"veezoo.Tenant.Id")," variable, with the ID you configured earlier. With these we will restrict the access."),(0,r.kt)("p",null,"Virtual tables are more like views, and in this case we use it to hide the unrestricted access of the underlying table. Instead of accessing the ",(0,r.kt)("em",{parentName:"p"},"Customer")," table directly, we use this extra SQL code to filter out data we don't want the tenant to see. "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"To create the virtual tables, open ",(0,r.kt)("em",{parentName:"p"},"Veezoo Studio"),' and click on the folder icon (hovering over it displays the text "Show the file tree"). ')),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Within the ",(0,r.kt)("em",{parentName:"p"},"database")," folder (not the ",(0,r.kt)("em",{parentName:"p"},"knowledge-base")," folder!) find the folder labeled ",(0,r.kt)("em",{parentName:"p"},"Product")," and open the ",(0,r.kt)("inlineCode",{parentName:"p"},"table.ttl")," file. It should look something like this:"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'db.storage.embedded_hyperstore.public {\n    table Product {\n        identifier: "Product"\n        \n        \n        column Category {\n            identifier: "Category"\n            primitive_type: "text"\n        }\n...\n')),(0,r.kt)("p",null,"(The first line might look slightly different, but that doesn't matter and we aren't going to change it)\nChange it to this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'db.storage.embedded_hyperstore.public {\n    virtual_table Product {\n        identifier: "Product"\n        virtual_table_sql: \n         """\n             SELECT\n                 *\n             FROM\n                 "Product" p\n             WHERE\n                 p."Provider ID" = ${quote(veezoo.Tenant.Id)}\n             OR\n                 ${quote(veezoo.Tenant.Id)} = 0\n            """\n        \n        \n        column Category {\n            identifier: "Category"\n            primitive_type: "text"\n        }\n...\n')),(0,r.kt)("p",null,"Now, when you ask questions about the product, the ",(0,r.kt)("inlineCode",{parentName:"p"},"virtual_table_sql")," will be executed first, using the Tenant ID. For example as a Technology Shop tenant with ID = 3 you will only see products with ",(0,r.kt)("em",{parentName:"p"},"Provider ID = 3"),' (which in our example are all the products that are in the "Technology" ',(0,r.kt)("em",{parentName:"p"},"Category"),"). The ",(0,r.kt)("inlineCode",{parentName:"p"},"OR")," clause is added so that the Admin user can see everything."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"In a similar fashion, change the ",(0,r.kt)("inlineCode",{parentName:"li"},"table.ttl")," files within the ",(0,r.kt)("em",{parentName:"li"},"Customer")," and ",(0,r.kt)("em",{parentName:"li"},"Order")," folders.\n",(0,r.kt)("em",{parentName:"li"},"Order"),":")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'db.storage.embedded_hyperstore.public {\n    virtual_table Order {\n        identifier: "Order"\n        virtual_table_sql: \n         """\n             SELECT\n                 o.*\n             FROM\n                 "Order" o\n             JOIN\n                 "Product" p\n             ON\n                 o."Product ID" = p."Product ID"\n             WHERE\n                 p."Provider ID" = ${quote(veezoo.Tenant.Id)}\n             OR\n                 ${quote(veezoo.Tenant.Id)} = 0\n            """\n...\n')),(0,r.kt)("p",null,"and ",(0,r.kt)("em",{parentName:"p"},"Customer"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'db.storage.embedded_hyperstore.public {\n    virtual_table Customer {\n        identifier: "Customer"\n        virtual_table_sql: \n         """\n             SELECT DISTINCT\n                 c.*\n             FROM\n                 "Customer" c\n             JOIN\n                 "Order" o\n             ON\n                 c."Customer ID" = o."Customer ID"\n             JOIN\n                 "Product" p\n             ON\n                 o."Product ID" = p."Product ID"\n             WHERE\n                 p."Provider ID" = ${quote(veezoo.Tenant.Id)}\n             OR\n                 ${quote(veezoo.Tenant.Id)} = 0\n            """\n...\n')),(0,r.kt)("p",null,"This is already everything we need to add. Save the changes. Now we need to update the tenants ",(0,r.kt)("em",{parentName:"p"},"knowledge graph"),". "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"In ",(0,r.kt)("em",{parentName:"p"},"Veezoo Studio"),", go to ",(0,r.kt)("em",{parentName:"p"},"Tenant Access"),", select all tenants and click on ",(0,r.kt)("em",{parentName:"p"},"UPDATE"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The last thing we need to do, is to give the default user (you, when you access this ",(0,r.kt)("em",{parentName:"p"},"knowledge graph")," via regular Veezoo) a ",(0,r.kt)("inlineCode",{parentName:"p"},"veezoo.Tenant.Id")," value (right now you would get error messages in the chat, since the SQL code now uses this variable). Click on the pencil icon in the top row (the one without ",(0,r.kt)("em",{parentName:"p"},"Tenant ID")," or ",(0,r.kt)("em",{parentName:"p"},"Name"),") and set the ID to 0."))),(0,r.kt)("p",null,'If you now open the chat in your demo website again, you will get different results for different users. To see this clearly, type "Products" and you will see that all of the displayed ones have the same ',(0,r.kt)("em",{parentName:"p"},"Category")," (except of course you are logged in with the Admin account)."),(0,r.kt)("p",null,"Congratulations, you are all done!"))}c.isMDXComponent=!0},3825:function(e,t,a){t.Z=a.p+"assets/images/admin-tenants-4446489dd7295ad1f89ef85d8d25bda9.png"},8230:function(e,t,a){t.Z=a.p+"assets/images/studio-tenant-variables-9249adb52f0a951855564b0a258d823f.png"}}]);