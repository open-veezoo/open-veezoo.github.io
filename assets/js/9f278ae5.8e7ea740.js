"use strict";(self.webpackChunkveezoo_docs=self.webpackChunkveezoo_docs||[]).push([[6249],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return h}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),c=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(u.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=c(n),f=o,h=p["".concat(u,".").concat(f)]||p[f]||d[f]||a;return n?r.createElement(h,i(i({ref:t},l),{},{components:n})):r.createElement(h,i({ref:t},l))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=f;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s[p]="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},63:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return u},default:function(){return h},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return p}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],s={sidebar_label:"\u2699\ufe0f quantity_of"},u=void 0,c={unversionedId:"reference/kb-layer/attribute/quantity_of",id:"reference/kb-layer/attribute/quantity_of",title:"quantity_of",description:"Definition",source:"@site/docs/reference/kb-layer/attribute/quantity_of.md",sourceDirName:"reference/kb-layer/attribute",slug:"/reference/kb-layer/attribute/quantity_of",permalink:"/docs/reference/kb-layer/attribute/quantity_of",draft:!1,tags:[],version:"current",frontMatter:{sidebar_label:"\u2699\ufe0f quantity_of"},sidebar:"reference",previous:{title:"\u2699\ufe0f default_aggregation",permalink:"/docs/reference/kb-layer/attribute/default_aggregation"},next:{title:"\u2699\ufe0f is_snapshot_date",permalink:"/docs/reference/kb-layer/attribute/is_snapshot_date"}},l={},p=[{value:"Definition",id:"definition",level:2},{value:"Usage",id:"usage",level:2},{value:"Behavior",id:"behavior",level:3}],d={toc:p},f="wrapper";function h(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)(f,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"definition"},"Definition"),(0,a.kt)("p",null,"Setting the property ",(0,a.kt)("inlineCode",{parentName:"p"},"quantity_of")," on a numeric attribute or measure to a class will make the count of that class resolve to the sum of the numeric attribute respectively the measure."),(0,a.kt)("p",null,"Databases sometimes contain ",(0,a.kt)("inlineCode",{parentName:"p"},"QUANTITY")," columns, which store a count of objects that correspond to another column, for example the number of products ordered.\nWe then usually want to be able to ask about the number of products and get the sum of the quantity instead when appropriate.\nNote that there is often also a ",(0,a.kt)("inlineCode",{parentName:"p"},"PRODUCT"),' column, however we want e.g. "number of products ordered this year" to resolve to "sum of quantity" instead of "distinct count of products".'),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("p",null,"Configuring ",(0,a.kt)("inlineCode",{parentName:"p"},"quantity_of")," is straightforward, the value is just set to the class that should resolve to the quantity when counted.\nThere is an important restriction: the class needs to be directly connected to the outer class of the quantity attribute (and may not be the outer class itself)."),(0,a.kt)("p",null,"The typical example is found in sales datasets about orders: in these, orders consist of multiple order lines, each representing a quantity of a product in the order.\nNote that the quantity in this example counts the individual physical products that will be shipped to the customer, e.g. the quantity counts five sunglasses;\nthis is not the same as the product found in the database, which consists of types of these physical product, e.g. the sunglasses product.\n(For the more theoretically inclined, this distinction is known as ",(0,a.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Type%E2%80%93token_distinction"},"type-token distinction")," in the literature)"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'kb {\n\n    class Order {\n        /* ... */\n    }\n\n    class OrderLine {\n\n        /* ... */\n\n        relationship Order {\n            to: kb.Order\n        }\n\n        \n        relationship Product {\n            to: kb.Product\n        }\n\n        integer Quantity {\n            name.en: "Quantity"\n\n            // Indicates that "number of product" will be understood as "sum of quantity",\n            //  when appropriate according to the question\n            // Important: the class kb.Product needs to have a direct relationship\n            //  to the outer class, i.e. kb.OrderLine\n            quantity_of: kb.Product\n        }\n    }\n\n    class Product {\n        /* ... */\n    }\n}\n')),(0,a.kt)("h3",{id:"behavior"},"Behavior"),(0,a.kt)("p",null,'Generally speaking, Veezoo will understand the count of products in questions as sum of quantity when the product is connected to an order, for example "How many products were ordered last week?".\nQuestions that don\'t contain a count or that are clearly about counting distinct products won\'t be affected, e.g. "Number of products with more than 10 orders".'))}h.isMDXComponent=!0}}]);