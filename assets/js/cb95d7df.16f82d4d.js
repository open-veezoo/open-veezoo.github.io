"use strict";(self.webpackChunkveezoo_docs=self.webpackChunkveezoo_docs||[]).push([[9142],{3905:function(e,t,n){n.d(t,{kt:function(){return d}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),d=s(n),c=r,f=d["".concat(p,".").concat(c)]||d[c]||u[c]||i;return n?a.createElement(f,l(l({ref:t},m),{},{components:n})):a.createElement(f,l({ref:t},m))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var s=2;s<i;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8811:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return u},default:function(){return d}});var a=n(3117),r=n(102),i=(n(7294),n(3905)),l=["components"],o={id:"relationship",title:"What is a relationship?"},p=void 0,s={unversionedId:"reference/kb-layer/relationship/relationship",id:"reference/kb-layer/relationship/relationship",title:"What is a relationship?",description:"Definition",source:"@site/docs/reference/kb-layer/relationship/relationship.md",sourceDirName:"reference/kb-layer/relationship",slug:"/reference/kb-layer/relationship/",permalink:"/docs/reference/kb-layer/relationship/",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/reference/kb-layer/relationship/relationship.md",tags:[],version:"current",frontMatter:{id:"relationship",title:"What is a relationship?"},sidebar:"docs",previous:{title:"What is an entity?",permalink:"/docs/reference/kb-layer/entity/"},next:{title:"to",permalink:"/docs/reference/kb-layer/relationship/to"}},u=[{value:"Definition",id:"definition",children:[],level:2},{value:"Usage",id:"usage",children:[],level:2}],m={toc:u};function d(e){var t=e.components,n=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"definition"},"Definition"),(0,i.kt)("p",null,"A relationship in VKL describes how classes relate to each other. "),(0,i.kt)("p",null,"Example:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Till_Haug")," ",(0,i.kt)("em",{parentName:"li"},"works at")," ",(0,i.kt)("inlineCode",{parentName:"li"},"Veezoo_AG")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"JP_Monteiro")," ",(0,i.kt)("em",{parentName:"li"},"is from the segment")," ",(0,i.kt)("inlineCode",{parentName:"li"},"Consumer")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Rio_de_Janeiro")," ",(0,i.kt)("em",{parentName:"li"},"is located in")," ",(0,i.kt)("inlineCode",{parentName:"li"},"Brazil"))),(0,i.kt)("p",null,"In other words, we have the following relationships:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"works_at")," is a relationship that goes from ",(0,i.kt)("inlineCode",{parentName:"li"},"Employee")," to ",(0,i.kt)("inlineCode",{parentName:"li"},"Company")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"from_segment")," is a relationship that goes from ",(0,i.kt)("inlineCode",{parentName:"li"},"Customer")," to the class ",(0,i.kt)("inlineCode",{parentName:"li"},"Segment")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"located_in")," is a relationship that goes from ",(0,i.kt)("inlineCode",{parentName:"li"},"City")," to the class ",(0,i.kt)("inlineCode",{parentName:"li"},"Country"))),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'import: [\n    db.postgres.movie_db.public.CUSTOMER\n]\n\nkb {\n\n    class Customer {\n        ...\n\n        relationship lives_in {\n            \n            /** How to display this relationship to the user in an answer\'s filters,\n             * e.g. "Customer lives in Brazil" \n             * Default: "with" */\n            display_name.en: "lives in"\n            \n            /** Specifies the cardinality of the relationship \n             *    one of: KB_One2One, KB_Many2One, KB_Many2Many, KB_One2Many).\n             * Default: KB_Many2One */\n            tag: KB_Many2One\n\n            /** lives_in is a relationship that goes from Customer to Country. */\n            to: kb.Country\n\n            /** An optional join path in the case of intermediate tables.\n             *  Default: not set */\n            join: [ ... ]\n\n            /** The sql expression representing this relationship. */\n            sql: "${CUSTOMER.country_id}"\n        }\n    }\n}\n')),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Property"),(0,i.kt)("th",{parentName:"tr",align:null},"Optional/Mandatory"),(0,i.kt)("th",{parentName:"tr",align:null},"Summary"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/reference/kb-layer/relationship/to"},"to")),(0,i.kt)("td",{parentName:"tr",align:null},"Mandatory"),(0,i.kt)("td",{parentName:"tr",align:null},"A relationship is always between the outer class where it is defined and another class, specified in the property ",(0,i.kt)("inlineCode",{parentName:"td"},"to"),"."),(0,i.kt)("td",{parentName:"tr",align:null},"No default")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/reference/kb-layer/relationship/sql"},"sql")),(0,i.kt)("td",{parentName:"tr",align:null},"Mandatory"),(0,i.kt)("td",{parentName:"tr",align:null},"The sql expression representing this relationship, usually a foreign key."),(0,i.kt)("td",{parentName:"tr",align:null},"No default")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/reference/kb-layer/general/display_name"},"display_name")),(0,i.kt)("td",{parentName:"tr",align:null},"Optional"),(0,i.kt)("td",{parentName:"tr",align:null},"How to display this relationship to the user in an answer's filters, e.g. \"Customer lives in Brazil"),(0,i.kt)("td",{parentName:"tr",align:null},'"with" in the respective language')),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"."},"tag: KB_Many2One/etc")),(0,i.kt)("td",{parentName:"tr",align:null},"Optional"),(0,i.kt)("td",{parentName:"tr",align:null},"Specifies the cardinality of the relationship, one of: KB_One2One, KB_Many2One, KB_Many2Many, KB_One2Many)."),(0,i.kt)("td",{parentName:"tr",align:null},"KB_Many2One")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/reference/kb-layer/general/join"},"join")),(0,i.kt)("td",{parentName:"tr",align:null},"Optional"),(0,i.kt)("td",{parentName:"tr",align:null},"An optional join path in the case of intermediate tables."),(0,i.kt)("td",{parentName:"tr",align:null},"Not set")))))}d.isMDXComponent=!0}}]);