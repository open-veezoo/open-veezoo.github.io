"use strict";(self.webpackChunkveezoo_docs=self.webpackChunkveezoo_docs||[]).push([[696],{3905:function(e,t,r){r.d(t,{Zo:function(){return d},kt:function(){return m}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i=n.createContext({}),c=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},d=function(e){var t=c(e.components);return n.createElement(i.Provider,{value:t},e.children)},l="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,d=u(e,["components","mdxType","originalType","parentName"]),l=c(r),f=o,m=l["".concat(i,".").concat(f)]||l[f]||p[f]||a;return r?n.createElement(m,s(s({ref:t},d),{},{components:r})):n.createElement(m,s({ref:t},d))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,s=new Array(a);s[0]=f;var u={};for(var i in t)hasOwnProperty.call(t,i)&&(u[i]=t[i]);u.originalType=e,u[l]="string"==typeof e?e:o,s[1]=u;for(var c=2;c<a;c++)s[c]=r[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},8277:function(e,t,r){r.r(t),r.d(t,{assets:function(){return d},contentTitle:function(){return i},default:function(){return m},frontMatter:function(){return u},metadata:function(){return c},toc:function(){return l}});var n=r(7462),o=r(3366),a=(r(7294),r(3905)),s=["components"],u={id:"understand-questions",title:"Get Veezoo to Understand Your Questions",sidebar_label:"Get Veezoo to Understand Your Questions",slug:"/recipes/understand-questions"},i=void 0,c={unversionedId:"recipes/understand-questions",id:"recipes/understand-questions",title:"Get Veezoo to Understand Your Questions",description:"name: I want to see 'Customer' instead of 'Dim Customer'",source:"@site/docs/recipes/understand-questions.md",sourceDirName:"recipes",slug:"/recipes/understand-questions",permalink:"/docs/recipes/understand-questions",draft:!1,editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/recipes/understand-questions.md",tags:[],version:"current",frontMatter:{id:"understand-questions",title:"Get Veezoo to Understand Your Questions",sidebar_label:"Get Veezoo to Understand Your Questions",slug:"/recipes/understand-questions"},sidebar:"docs",previous:{title:"Embedded Analytics",permalink:"/docs/tutorials/video-tutorials/embedded-analytics"},next:{title:"Help Business Users Understand Your Data",permalink:"/docs/recipes/understand-data"}},d={},l=[],p={toc:l},f="wrapper";function m(e){var t=e.components,r=(0,o.Z)(e,s);return(0,a.kt)(f,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/docs/reference/kb-layer/general/name"},"name"),": I want to see 'Customer' instead of 'Dim Customer'"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/docs/reference/kb-layer/general/synonym"},"synonym"),": I want to say 'NYC', instead of 'New York City'"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/docs/reference/kb-layer/class/default_date"},"default_date"),": If I say 2018, I mean Order Date in 2018"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/docs/reference/kb-layer/class/default_order"},"default_order"),": If I say 'top 10 orders', I mean 'top 10 orders by profit'"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/docs/reference/ontology/person"},"onto.Person"),": I want to say 'who' and see 'customers'"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/docs/reference/ontology/location"},"onto.Location"),": I want to say 'where' and see 'countries'"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/docs/reference/ontology/birthdate"},"onto.Birthdate"),": I want to ask about 'birthdays next week' based on a Birthdate column"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/docs/reference/kb-layer/class/creation_date"},"creation_date"),": I want to ask about the age of something based on a date"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/docs/reference/kb-layer/attribute/default_aggregation"},"default_aggregation"),": When I say 'temperature per year', I want the average temperature per year, not the sum"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/docs/reference/kb-layer/attribute/quantity_of"},"quantity_of"),': I want Veezoo to understand "number of products" as the sum of a quantity column'))}m.isMDXComponent=!0}}]);