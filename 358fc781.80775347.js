(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{108:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return m}));var r=t(0),o=t.n(r);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=o.a.createContext({}),u=function(e){var n=o.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},p=function(e){var n=u(e.components);return o.a.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},b=o.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,a=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=u(t),b=r,m=p["".concat(a,".").concat(b)]||p[b]||d[b]||i;return t?o.a.createElement(m,s(s({ref:n},l),{},{components:t})):o.a.createElement(m,s({ref:n},l))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,a=new Array(i);a[0]=b;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,a[1]=s;for(var l=2;l<i;l++)a[l]=t[l];return o.a.createElement.apply(null,a)}return o.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"},65:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return a})),t.d(n,"rightToc",(function(){return s})),t.d(n,"default",(function(){return l}));var r=t(2),o=(t(0),t(108));const i={id:"person",title:"onto.Person",sidebar_label:"Person",slug:"/reference/ontology/person"},a={unversionedId:"reference/ontology/person",id:"reference/ontology/person",isDocsHomePage:!1,title:"onto.Person",description:"Definition",source:"@site/docs/reference/ontology/person.md",slug:"/reference/ontology/person",permalink:"/docs/reference/ontology/person",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/reference/ontology/person.md",version:"current",sidebar_label:"Person",sidebar:"docs",previous:{title:"string",permalink:"/docs/reference/kb-layer/attribute/string"},next:{title:"onto.Location",permalink:"/docs/reference/ontology/location"}},s=[{value:"Definition",id:"definition",children:[{value:"Examples",id:"examples",children:[]},{value:"Limitations",id:"limitations",children:[]}]},{value:"Usage",id:"usage",children:[]}],c={rightToc:s};function l({components:e,...n}){return Object(o.b)("wrapper",Object(r.a)({},c,n,{components:e,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"definition"},"Definition"),Object(o.b)("p",null,'Some classes may refer to people and these are usually asked using "who".'),Object(o.b)("h3",{id:"examples"},"Examples"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},'"Who sold most car insurance policies in my agency?" means "Which employee sold ..."'),Object(o.b)("li",{parentName:"ul"},'"Who asked the most questions yesterday?" means "Which user asked the most questions..."')),Object(o.b)("h3",{id:"limitations"},"Limitations"),Object(o.b)("p",null,"If you define multiple classes as People, it may be harder for Veezoo to disambiguate.\nAlso, it could be that the behavior is not very consistent for the users, e.g. sometimes I see a customer, sometimes an employee."),Object(o.b)("h2",{id:"usage"},"Usage"),Object(o.b)("p",null,"For this to work, you will have to add an ",Object(o.b)("inlineCode",{parentName:"p"},"extends: onto.Person"),". Like this:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-json"}),'kb {\n    class User {\n        name.en: "User"\n        \n        from_table: USERS\n        sql: "${USERS.USER_ID}"\n        name_sql.en: "${USERS.USER_NAME}"\n        \n        // Make User extend a Person\n        extends: onto.Person\n\n        ...\n    }\n}        \n')),Object(o.b)("p",null,"Notice that sometimes your class will already be extending a concept from our ontology (",Object(o.b)("inlineCode",{parentName:"p"},"onto"),"). Many times this will already allow you to ask 'who' questions directly, e.g. for ",Object(o.b)("inlineCode",{parentName:"p"},"extends: onto.Employee")," or ",Object(o.b)("inlineCode",{parentName:"p"},"extends: onto.Customer"),"."))}l.isMDXComponent=!0}}]);