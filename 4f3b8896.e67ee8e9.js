(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{69:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return a})),t.d(n,"metadata",(function(){return c})),t.d(n,"rightToc",(function(){return l})),t.d(n,"default",(function(){return u}));var r=t(2),o=t(6),i=(t(0),t(92)),a={id:"to-string",title:"to: String",sidebar_label:"to: String",slug:"/reference/kb-layer/relation/semantic_link/string"},c={unversionedId:"reference/kb-layer/relation/semantic_link/to-string",id:"reference/kb-layer/relation/semantic_link/to-string",isDocsHomePage:!1,title:"to: String",description:"Definition",source:"@site/docs/reference/kb-layer/relation/semantic_link/to-string.md",slug:"/reference/kb-layer/relation/semantic_link/string",permalink:"/docs/reference/kb-layer/relation/semantic_link/string",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/reference/kb-layer/relation/semantic_link/to-string.md",version:"current",sidebar_label:"to: String",sidebar:"docs",previous:{title:"to: Boolean",permalink:"/docs/reference/kb-layer/relation/semantic_link/boolean"},next:{title:"Intermediate Tables and Multi-Joins",permalink:"/docs/reference/kb-layer/relation/semantic_link/intermediate-tables-and-multi-joins"}},l=[{value:"Definition",id:"definition",children:[]},{value:"Usage",id:"usage",children:[]}],s={rightToc:l};function u(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},s,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"definition"},"Definition"),Object(i.b)("p",null,"A String relation is used whenever you have a column or SQL expression that returns free-text, a URL, Email or any other textual information that you may want to search on, but not refer to its values explicitly."),Object(i.b)("h2",{id:"usage"},"Usage"),Object(i.b)("p",null,"Let's take the example of an e-commerce shop and look at a column in our database for ",Object(i.b)("inlineCode",{parentName:"p"},"returned_comment"),", so whenever customers return an order, they can specify why in free-text. In this case, it is not natural to model it as a class with entities. A comment doesn't have a name for you to refer to it in a question. But still you may want to explore its contents. "),Object(i.b)("p",null,"This is how we would model it in the Knowledge Graph:"),Object(i.b)("p",null,"File: ",Object(i.b)("em",{parentName:"p"},"hitchhiker/knowledge-base/classes/Order.vkl")),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-json"}),'import: [\n    db.postgres.movie_db.public.ORDERS\n]\n\nkb {\n\n    class Order {\n\n        ...\n\n        relation comment {\n            name.en: "Comment"\n            synonym.en: ["Returned Comment", "Complaint", "Feedback"]\n            to: String\n\n            semantic_link: {\n                to_sql: "${ORDERS.returned_comment}"\n            }\n            \n            tag: KB_Many2One\n        }\n    }\n}\n')),Object(i.b)("p",null,"That's it. Like this, you can ask questions involving text search operations, e.g. \"how many customers complained about 'damaged' orders last week?\"."))}u.isMDXComponent=!0},92:function(e,n,t){"use strict";t.d(n,"a",(function(){return m})),t.d(n,"b",(function(){return d}));var r=t(0),o=t.n(r);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=o.a.createContext({}),u=function(e){var n=o.a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},m=function(e){var n=u(e.components);return o.a.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},b=o.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,a=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),m=u(t),b=r,d=m["".concat(a,".").concat(b)]||m[b]||p[b]||i;return t?o.a.createElement(d,c(c({ref:n},s),{},{components:t})):o.a.createElement(d,c({ref:n},s))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,a=new Array(i);a[0]=b;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,a[1]=c;for(var s=2;s<i;s++)a[s]=t[s];return o.a.createElement.apply(null,a)}return o.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"}}]);