(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{108:function(e,t,r){"use strict";r.d(t,"a",(function(){return s})),r.d(t,"b",(function(){return m}));var n=r(0),a=r.n(n);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=a.a.createContext({}),b=function(e){var t=a.a.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},s=function(e){var t=b(e.components);return a.a.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},p=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,o=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),s=b(r),p=n,m=s["".concat(o,".").concat(p)]||s[p]||d[p]||i;return r?a.a.createElement(m,c(c({ref:t},u),{},{components:r})):a.a.createElement(m,c({ref:t},u))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=p;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:n,o[1]=c;for(var u=2;u<i;u++)o[u]=r[u];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,r)}p.displayName="MDXCreateElement"},85:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return i})),r.d(t,"metadata",(function(){return o})),r.d(t,"rightToc",(function(){return c})),r.d(t,"default",(function(){return u}));var n=r(2),a=(r(0),r(108));const i={id:"date",title:"date"},o={unversionedId:"reference/kb-layer/attribute/date",id:"reference/kb-layer/attribute/date",isDocsHomePage:!1,title:"date",description:"Definition",source:"@site/docs/reference/kb-layer/attribute/date.md",slug:"/reference/kb-layer/attribute/date",permalink:"/docs/reference/kb-layer/attribute/date",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/reference/kb-layer/attribute/date.md",version:"current",sidebar:"docs",previous:{title:"What is an attribute?",permalink:"/docs/reference/kb-layer/attribute"},next:{title:"double/integer",permalink:"/docs/reference/kb-layer/attribute/double-integer"}},c=[{value:"Definition",id:"definition",children:[]},{value:"Usage",id:"usage",children:[]}],l={rightToc:c};function u({components:e,...t}){return Object(a.b)("wrapper",Object(n.a)({},l,t,{components:e,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"definition"},"Definition"),Object(a.b)("p",null,"Date is used whenever you have a column or SQL expression that returns a partial (e.g. Year) or fully qualfied date (e.g. 2020-01-06) or datetime."),Object(a.b)("h2",{id:"usage"},"Usage"),Object(a.b)("p",null,"For ",Object(a.b)("inlineCode",{parentName:"p"},"date"),", Veezoo assumes that the ",Object(a.b)("inlineCode",{parentName:"p"},"sql")," is a SQL date/datetime expression. This means that in case it is not, you should change ",Object(a.b)("inlineCode",{parentName:"p"},"sql")," to be a casting operation in your SQL dialect, e.g. ",Object(a.b)("inlineCode",{parentName:"p"},"sql: \"TO_DATE(${ORDERS.date_str}, 'YYYYMMDD')\"")," or directly in your database."),Object(a.b)("p",null,"It is also required to specify the granularity by setting ",Object(a.b)("inlineCode",{parentName:"p"},"datetime_format"),". This is usually inferred by Veezoo when importing your schema. The most common are:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"YearFormat")," (e.g. 2020)"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"DayFormat")," (e.g. 2020-10-01)"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"TimeFormat")," (e.g. 2020-10-01 13:00:00)")),Object(a.b)("p",null,"File: ",Object(a.b)("em",{parentName:"p"},"hitchhiker/knowledge-base/classes/Order.vkl")),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'import: [\n    db.postgres.movie_db.public.ORDERS\n]\n\nkb {\n\n    class Order {\n\n        ...\n\n        date Order_Date {\n            name.en: "Order Date"\n\n            sql: "${ORDERS.order_date}"\n\n            datetime_format: DayFormat\n        }\n    }\n}\n')))}u.isMDXComponent=!0}}]);